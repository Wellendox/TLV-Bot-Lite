namespace TLVLibrary;

public static class Embeds
{
    public const string DefaultThumbnailUrl = @"https://i.imgur.com/VpFjG6c.png";
    public const string DefaultAuthorIcon = @"https://media.discordapp.net/attachments/657962444660015131/790181116845752320/lidl.png";
    public const string DefaultUrl = @"thiscouldbeanepiclittleurl";
    public const string DefaultErrorThumbnail = @"https://images-ext-1.discordapp.net/external/b5CjHkde16pIM9unTWWHcilGksVYMqFEZCEhHhPZJTk/%3Fv%3D1/https/cdn.discordapp.com/emojis/727149105109008424.png";
    public const string DefaultName = "TLV Bot Lite";

    /// <summary>
    /// Builds the simple embed.
    /// </summary>
    /// <param name="title">The title.</param>
    /// <param name="desc">The desc.</param>
    /// <param name="thumbnailUrl">The thumbnail URL.</param>
    /// <param name="imageUrl">The image URL.</param>
    /// <param name="name">The name.</param>
    /// <returns></returns>
    public static Embed BuildSimpleEmbed(string title, string desc, string thumbnailUrl = DefaultThumbnailUrl,
        string imageUrl = null, string name = DefaultName)
    {
        EmbedBuilder embedBuilder = new EmbedBuilder()
            .WithColor(Color.Orange)
            .WithTitle(title)
            .WithUrl(DefaultUrl)
            .WithAuthor($"{name}", DefaultAuthorIcon, DefaultUrl)
            .WithDescription(desc)
            .WithThumbnailUrl(thumbnailUrl)
            .WithCurrentTimestamp()
            .WithImageUrl(imageUrl)
            .WithFooter("Generated by TLV Gang", DefaultThumbnailUrl);
        Embed embed = embedBuilder.Build();
        return embed;
    }

    /// <summary>
    /// Errors the specified desc.
    /// </summary>
    /// <param name="desc">The desc.</param>
    /// <param name="name">The name.</param>
    /// <returns></returns>
    public static Embed Error(string desc, string name = DefaultName)
    {
        EmbedBuilder embedBuilder = new EmbedBuilder()
            .WithColor(Color.Red)
            .WithTitle("Error")
            .WithUrl(DefaultUrl)
            .WithAuthor($"{name}", DefaultAuthorIcon, DefaultUrl)
            .WithDescription(desc)
            .WithThumbnailUrl(DefaultErrorThumbnail)
            .WithCurrentTimestamp()
            .WithFooter("Generated by TLV Gang", DefaultThumbnailUrl);
        Embed embed = embedBuilder.Build();
        return embed;
    }

    /// <summary>
    /// Builds the field embed.
    /// </summary>
    /// <param name="title">The title.</param>
    /// <param name="fields">The fields.</param>
    /// <param name="desc">The desc.</param>
    /// <param name="thumbnailUrl">The thumbnail URL.</param>
    /// <param name="imageUrl">The image URL.</param>
    /// <param name="name">The name.</param>
    /// <returns></returns>
    public static Embed BuildFieldEmbed(string title, List<EmbedFieldBuilder> fields, string desc = null, string
        thumbnailUrl = DefaultThumbnailUrl, string imageUrl = null, string name = DefaultName)
    {
        EmbedBuilder embedBuilder = new EmbedBuilder()
            .WithColor(Color.Orange)
            .WithTitle(title)
            .WithDescription(desc)
            .WithUrl(DefaultUrl)
            .WithAuthor($"{name}", DefaultAuthorIcon, DefaultUrl)
            .WithThumbnailUrl(thumbnailUrl)
            .WithCurrentTimestamp()
            .WithFooter("Generated by TLV Gang", DefaultThumbnailUrl);

        foreach (EmbedFieldBuilder field in fields)
            embedBuilder.AddField(field);

        Embed embed = embedBuilder.Build();
        return embed;
    }

    /// <summary>
    /// Builds the field embed.
    /// </summary>
    /// <param name="title">The title.</param>
    /// <param name="fields">The fields.</param>
    /// <param name="desc">The desc.</param>
    /// <param name="thumbnailUrl">The thumbnail URL.</param>
    /// <param name="imageUrl">The image URL.</param>
    /// <param name="name">The name.</param>
    /// <returns></returns>
    public static Embed BuildFieldEmbed(string title, List<Tuple<string, string, string>> fields, string desc = null,
        string thumbnailUrl = DefaultThumbnailUrl, string imageUrl = null, string name = DefaultName)
    {
        EmbedBuilder embedBuilder = new EmbedBuilder()
            .WithColor(Color.Orange)
            .WithTitle(title)
            .WithDescription(desc)
            .WithUrl(DefaultUrl)
            .WithAuthor($"{name}", DefaultAuthorIcon, DefaultUrl)
            .WithThumbnailUrl(thumbnailUrl)
            .WithCurrentTimestamp()
            .WithFooter("Generated by TLV Gang", DefaultThumbnailUrl);

        foreach (var field in fields)
            embedBuilder.AddField(field.Item1, field.Item2, Convert.ToBoolean(field.Item3));

        Embed embed = embedBuilder.Build();
        return embed;
    }
}